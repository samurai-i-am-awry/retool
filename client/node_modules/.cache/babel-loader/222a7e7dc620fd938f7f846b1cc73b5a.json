{"ast":null,"code":"var _jsxFileName = \"/Users/nathanniesel/Desktop/Project-3/client/src/components/SearchCard.js\";\n\n/* import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n\n\nconst styles = {\n    card: {\n      maxWidth: 345,\n    },\n    media: {\n      height: 200,\n    },\n  };\n  \n  function MediaCard(props) {\n    const { classes } = props;\n    return (\n      <Card className={classes.card}>\n        <CardActionArea>\n          <CardMedia\n            className={classes.media}\n            image={props.image}\n            title={props.name}\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {props.name}\n            </Typography>\n            <Typography component=\"p\">\n              {\"$\" + props.price + \"/hr\"}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    );\n  }\n  \n  MediaCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n  \n  export default withStyles(styles)(MediaCard); */\n// End of first option - Cards\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton'; //import InfoIcon from '@material-ui/icons/Info';\n\nvar dummySource = [{\n  image: 'saw.jpg',\n  name: \"Circular Saw 1\",\n  price: 200\n}, {\n  image: 'saw.jpg',\n  name: \"Circular Saw 2\",\n  price: 400\n}, {\n  image: 'saw.jpg',\n  name: \"Circular Saw 3\",\n  price: 600\n}];\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper\n    },\n    gridList: {\n      width: 500,\n      height: 'auto'\n    },\n    icon: {\n      color: 'rgba(255, 255, 255, 0.54)'\n    }\n  };\n};\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\n\n\nfunction TitlebarGridList(props) {\n  var classes = props.classes;\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(GridList, {\n    cellHeight: 100,\n    className: classes.gridList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(GridListTile, {\n    key: \"Subheader\",\n    cols: 4,\n    style: {\n      height: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(ListSubheader, {\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Results\")), dummySource.map(function (tile) {\n    return React.createElement(GridListTile, {\n      key: tile.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: tile.image,\n      alt: tile.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(GridListTileBar, {\n      title: tile.name,\n      subtitle: \"$\" + tile.price + \"/hr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }));\n  })));\n}\n\nTitlebarGridList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(TitlebarGridList);","map":{"version":3,"sources":["/Users/nathanniesel/Desktop/Project-3/client/src/components/SearchCard.js"],"names":["React","PropTypes","withStyles","GridList","GridListTile","GridListTileBar","ListSubheader","IconButton","dummySource","image","name","price","styles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","icon","color","TitlebarGridList","props","classes","map","tile","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["/* import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n\n\nconst styles = {\n    card: {\n      maxWidth: 345,\n    },\n    media: {\n      height: 200,\n    },\n  };\n  \n  function MediaCard(props) {\n    const { classes } = props;\n    return (\n      <Card className={classes.card}>\n        <CardActionArea>\n          <CardMedia\n            className={classes.media}\n            image={props.image}\n            title={props.name}\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {props.name}\n            </Typography>\n            <Typography component=\"p\">\n              {\"$\" + props.price + \"/hr\"}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    );\n  }\n  \n  MediaCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n  \n  export default withStyles(styles)(MediaCard); */\n\n// End of first option - Cards\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\n//import InfoIcon from '@material-ui/icons/Info';\n\n\nconst dummySource = [\n{\n    image: 'saw.jpg',\n    name: \"Circular Saw 1\",\n    price: 200\n},\n{\n    image: 'saw.jpg',\n    name: \"Circular Saw 2\",\n    price: 400\n},\n{\n    image: 'saw.jpg',\n    name: \"Circular Saw 3\",\n    price: 600\n}\n]; \n\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 500,\n    height: 'auto',\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n});\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\nfunction TitlebarGridList(props) {\n  const { classes } = props;\n\n  return (\n    <div className={classes.root}>\n      <GridList cellHeight={100} className={classes.gridList}>\n        <GridListTile key=\"Subheader\" cols={4} style={{ height: 'auto' }}>\n          <ListSubheader component=\"div\">Results</ListSubheader>\n        </GridListTile>\n        {dummySource.map(tile => (\n          <GridListTile key={tile.name}>\n            <img src={tile.image} alt={tile.name} />\n            <GridListTileBar\n              title={tile.name}\n              subtitle={\"$\" + tile.price + \"/hr\"}\n\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n\nTitlebarGridList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TitlebarGridList);\n"]},"metadata":{},"sourceType":"module"}