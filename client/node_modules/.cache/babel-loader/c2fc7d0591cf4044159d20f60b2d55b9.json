{"ast":null,"code":"// import React from 'react';\n// import PropTypes from 'prop-types';\n// import classNames from 'classnames';\n// import Select from 'react-select';\n// import { withStyles } from '@material-ui/core/styles';\n// import Typography from '@material-ui/core/Typography';\n// import NoSsr from '@material-ui/core/NoSsr';\n// import TextField from '@material-ui/core/TextField';\n// import Paper from '@material-ui/core/Paper';\n// import Chip from '@material-ui/core/Chip';\n// import MenuItem from '@material-ui/core/MenuItem';\n// import CancelIcon from '@material-ui/icons/Cancel';\n// import { emphasize } from '@material-ui/core/styles/colorManipulator';\n// const suggestions = [\n//   { label: 'Afghanistan' },\n//   { label: 'Aland Islands' },\n//   { label: 'Albania' },\n//   { label: 'Algeria' },\n//   { label: 'American Samoa' },\n//   { label: 'Andorra' },\n//   { label: 'Angola' },\n//   { label: 'Anguilla' },\n//   { label: 'Antarctica' },\n//   { label: 'Antigua and Barbuda' },\n//   { label: 'Argentina' },\n//   { label: 'Armenia' },\n//   { label: 'Aruba' },\n//   { label: 'Australia' },\n//   { label: 'Austria' },\n//   { label: 'Azerbaijan' },\n//   { label: 'Bahamas' },\n//   { label: 'Bahrain' },\n//   { label: 'Bangladesh' },\n//   { label: 'Barbados' },\n//   { label: 'Belarus' },\n//   { label: 'Belgium' },\n//   { label: 'Belize' },\n//   { label: 'Benin' },\n//   { label: 'Bermuda' },\n//   { label: 'Bhutan' },\n//   { label: 'Bolivia, Plurinational State of' },\n//   { label: 'Bonaire, Sint Eustatius and Saba' },\n//   { label: 'Bosnia and Herzegovina' },\n//   { label: 'Botswana' },\n//   { label: 'Bouvet Island' },\n//   { label: 'Brazil' },\n//   { label: 'British Indian Ocean Territory' },\n//   { label: 'Brunei Darussalam' },\n// ].map(suggestion => ({\n//   value: suggestion.label,\n//   label: suggestion.label,\n// }));\n// const styles = theme => ({\n//   root: {\n//     flexGrow: 1,\n//     height: 250,\n//   },\n//   input: {\n//     display: 'flex',\n//     padding: 0,\n//   },\n//   valueContainer: {\n//     display: 'flex',\n//     flexWrap: 'wrap',\n//     flex: 1,\n//     alignItems: 'center',\n//     overflow: 'hidden',\n//   },\n//   chip: {\n//     margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`,\n//   },\n//   chipFocused: {\n//     backgroundColor: emphasize(\n//       theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\n//       0.08,\n//     ),\n//   },\n//   noOptionsMessage: {\n//     padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n//   },\n//   singleValue: {\n//     fontSize: 16,\n//   },\n//   placeholder: {\n//     position: 'absolute',\n//     left: 2,\n//     fontSize: 16,\n//   },\n//   paper: {\n//     position: 'absolute',\n//     zIndex: 1,\n//     marginTop: theme.spacing.unit,\n//     left: 0,\n//     right: 0,\n//   },\n//   divider: {\n//     height: theme.spacing.unit * 2,\n//   },\n// });\n// function Search(props) {\n//   return (\n//     <Typography\n//       color=\"textSecondary\"\n//       className={props.selectProps.classes.noOptionsMessage}\n//       {...props.innerProps}\n//     >\n//       {props.children}\n//     </Typography>\n//   );\n// }\n// function inputComponent({ inputRef, ...props }) {\n//   return <div ref={inputRef} {...props} />;\n// }\n// function Control(props) {\n//   return (\n//     <TextField\n//       fullWidth\n//       InputProps={{\n//         inputComponent,\n//         inputProps: {\n//           className: props.selectProps.classes.input,\n//           inputRef: props.innerRef,\n//           children: props.children,\n//           ...props.innerProps,\n//         },\n//       }}\n//       {...props.selectProps.textFieldProps}\n//     />\n//   );\n// }\n// function Option(props) {\n//   return (\n//     <MenuItem\n//       buttonRef={props.innerRef}\n//       selected={props.isFocused}\n//       component=\"div\"\n//       style={{\n//         fontWeight: props.isSelected ? 500 : 400,\n//       }}\n//       {...props.innerProps}\n//     >\n//       {props.children}\n//     </MenuItem>\n//   );\n// }\n// function Placeholder(props) {\n//   return (\n//     <Typography\n//       color=\"textSecondary\"\n//       className={props.selectProps.classes.placeholder}\n//       {...props.innerProps}\n//     >\n//       {props.children}\n//     </Typography>\n//   );\n// }\n// function SingleValue(props) {\n//   return (\n//     <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\n//       {props.children}\n//     </Typography>\n//   );\n// }\n// function ValueContainer(props) {\n//   return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\n// }\n// function MultiValue(props) {\n//   return (\n//     <Chip\n//       tabIndex={-1}\n//       label={props.children}\n//       className={classNames(props.selectProps.classes.chip, {\n//         [props.selectProps.classes.chipFocused]: props.isFocused,\n//       })}\n//       onDelete={props.removeProps.onClick}\n//       deleteIcon={<CancelIcon {...props.removeProps} />}\n//     />\n//   );\n// }\n// function Menu(props) {\n//   return (\n//     <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\n//       {props.children}\n//     </Paper>\n//   );\n// }\n// const components = {\n//   Control,\n//   Menu,\n//   MultiValue,\n// //   NoOptionsMessage,\n//   Option,\n//   Placeholder,\n//   SingleValue,\n//   ValueContainer,\n// };\n// class IntegrationReactSelect extends React.Component {\n//   state = {\n//     single: null,\n//     multi: null,\n//   };\n//   handleChange = name => value => {\n//     this.setState({\n//       [name]: value,\n//     });\n//   };\n//   render() {\n//     const { classes, theme } = this.props;\n//     const selectStyles = {\n//       input: base => ({\n//         ...base,\n//         color: theme.palette.text.primary,\n//         '& input': {\n//           font: 'inherit',\n//         },\n//       }),\n//     };\n//     return (\n//       <div className={classes.root}>\n//         <NoSsr>\n//           <Select\n//             classes={classes}\n//             styles={selectStyles}\n//             options={suggestions}\n//             components={components}\n//             value={this.state.single}\n//             onChange={this.handleChange('single')}\n//             placeholder=\"Search a country (start with a)\"\n//             isClearable\n//           />\n//           <div className={classes.divider} />\n//           <Select\n//             classes={classes}\n//             styles={selectStyles}\n//             textFieldProps={{\n//               label: 'Label',\n//               InputLabelProps: {\n//                 shrink: true,\n//               },\n//             }}\n//             options={suggestions}\n//             components={components}\n//             value={this.state.multi}\n//             onChange={this.handleChange('multi')}\n//             placeholder=\"Select multiple countries\"\n//             isMulti\n//           />\n//         </NoSsr>\n//       </div>\n//     );\n//   }\n// }\n// Search.propTypes = {\n//   classes: PropTypes.object.isRequired,\n//   theme: PropTypes.object.isRequired,\n// };\n// export default withStyles(styles)(Search);","map":{"version":3,"sources":["/Users/andreahalloran/retool/client/src/pages/Search.js"],"names":[],"mappingssourcesContent":["// import React from 'react';\n// import PropTypes from 'prop-types';\n// import classNames from 'classnames';\n// import Select from 'react-select';\n// import { withStyles } from '@material-ui/core/styles';\n// import Typography from '@material-ui/core/Typography';\n// import NoSsr from '@material-ui/core/NoSsr';\n// import TextField from '@material-ui/core/TextField';\n// import Paper from '@material-ui/core/Paper';\n// import Chip from '@material-ui/core/Chip';\n// import MenuItem from '@material-ui/core/MenuItem';\n// import CancelIcon from '@material-ui/icons/Cancel';\n// import { emphasize } from '@material-ui/core/styles/colorManipulator';\n\n// const suggestions = [\n//   { label: 'Afghanistan' },\n//   { label: 'Aland Islands' },\n//   { label: 'Albania' },\n//   { label: 'Algeria' },\n//   { label: 'American Samoa' },\n//   { label: 'Andorra' },\n//   { label: 'Angola' },\n//   { label: 'Anguilla' },\n//   { label: 'Antarctica' },\n//   { label: 'Antigua and Barbuda' },\n//   { label: 'Argentina' },\n//   { label: 'Armenia' },\n//   { label: 'Aruba' },\n//   { label: 'Australia' },\n//   { label: 'Austria' },\n//   { label: 'Azerbaijan' },\n//   { label: 'Bahamas' },\n//   { label: 'Bahrain' },\n//   { label: 'Bangladesh' },\n//   { label: 'Barbados' },\n//   { label: 'Belarus' },\n//   { label: 'Belgium' },\n//   { label: 'Belize' },\n//   { label: 'Benin' },\n//   { label: 'Bermuda' },\n//   { label: 'Bhutan' },\n//   { label: 'Bolivia, Plurinational State of' },\n//   { label: 'Bonaire, Sint Eustatius and Saba' },\n//   { label: 'Bosnia and Herzegovina' },\n//   { label: 'Botswana' },\n//   { label: 'Bouvet Island' },\n//   { label: 'Brazil' },\n//   { label: 'British Indian Ocean Territory' },\n//   { label: 'Brunei Darussalam' },\n// ].map(suggestion => ({\n//   value: suggestion.label,\n//   label: suggestion.label,\n// }));\n\n// const styles = theme => ({\n//   root: {\n//     flexGrow: 1,\n//     height: 250,\n//   },\n//   input: {\n//     display: 'flex',\n//     padding: 0,\n//   },\n//   valueContainer: {\n//     display: 'flex',\n//     flexWrap: 'wrap',\n//     flex: 1,\n//     alignItems: 'center',\n//     overflow: 'hidden',\n//   },\n//   chip: {\n//     margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`,\n//   },\n//   chipFocused: {\n//     backgroundColor: emphasize(\n//       theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\n//       0.08,\n//     ),\n//   },\n//   noOptionsMessage: {\n//     padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n//   },\n//   singleValue: {\n//     fontSize: 16,\n//   },\n//   placeholder: {\n//     position: 'absolute',\n//     left: 2,\n//     fontSize: 16,\n//   },\n//   paper: {\n//     position: 'absolute',\n//     zIndex: 1,\n//     marginTop: theme.spacing.unit,\n//     left: 0,\n//     right: 0,\n//   },\n//   divider: {\n//     height: theme.spacing.unit * 2,\n//   },\n// });\n\n// function Search(props) {\n//   return (\n//     <Typography\n//       color=\"textSecondary\"\n//       className={props.selectProps.classes.noOptionsMessage}\n//       {...props.innerProps}\n//     >\n//       {props.children}\n//     </Typography>\n//   );\n// }\n\n// function inputComponent({ inputRef, ...props }) {\n//   return <div ref={inputRef} {...props} />;\n// }\n\n// function Control(props) {\n//   return (\n//     <TextField\n//       fullWidth\n//       InputProps={{\n//         inputComponent,\n//         inputProps: {\n//           className: props.selectProps.classes.input,\n//           inputRef: props.innerRef,\n//           children: props.children,\n//           ...props.innerProps,\n//         },\n//       }}\n//       {...props.selectProps.textFieldProps}\n//     />\n//   );\n// }\n\n// function Option(props) {\n//   return (\n//     <MenuItem\n//       buttonRef={props.innerRef}\n//       selected={props.isFocused}\n//       component=\"div\"\n//       style={{\n//         fontWeight: props.isSelected ? 500 : 400,\n//       }}\n//       {...props.innerProps}\n//     >\n//       {props.children}\n//     </MenuItem>\n//   );\n// }\n\n// function Placeholder(props) {\n//   return (\n//     <Typography\n//       color=\"textSecondary\"\n//       className={props.selectProps.classes.placeholder}\n//       {...props.innerProps}\n//     >\n//       {props.children}\n//     </Typography>\n//   );\n// }\n\n// function SingleValue(props) {\n//   return (\n//     <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\n//       {props.children}\n//     </Typography>\n//   );\n// }\n\n// function ValueContainer(props) {\n//   return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\n// }\n\n// function MultiValue(props) {\n//   return (\n//     <Chip\n//       tabIndex={-1}\n//       label={props.children}\n//       className={classNames(props.selectProps.classes.chip, {\n//         [props.selectProps.classes.chipFocused]: props.isFocused,\n//       })}\n//       onDelete={props.removeProps.onClick}\n//       deleteIcon={<CancelIcon {...props.removeProps} />}\n//     />\n//   );\n// }\n\n// function Menu(props) {\n//   return (\n//     <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\n//       {props.children}\n//     </Paper>\n//   );\n// }\n\n// const components = {\n//   Control,\n//   Menu,\n//   MultiValue,\n// //   NoOptionsMessage,\n//   Option,\n//   Placeholder,\n//   SingleValue,\n//   ValueContainer,\n// };\n\n// class IntegrationReactSelect extends React.Component {\n//   state = {\n//     single: null,\n//     multi: null,\n//   };\n\n//   handleChange = name => value => {\n//     this.setState({\n//       [name]: value,\n//     });\n//   };\n\n//   render() {\n//     const { classes, theme } = this.props;\n\n//     const selectStyles = {\n//       input: base => ({\n//         ...base,\n//         color: theme.palette.text.primary,\n//         '& input': {\n//           font: 'inherit',\n//         },\n//       }),\n//     };\n\n//     return (\n//       <div className={classes.root}>\n//         <NoSsr>\n//           <Select\n//             classes={classes}\n//             styles={selectStyles}\n//             options={suggestions}\n//             components={components}\n//             value={this.state.single}\n//             onChange={this.handleChange('single')}\n//             placeholder=\"Search a country (start with a)\"\n//             isClearable\n//           />\n//           <div className={classes.divider} />\n//           <Select\n//             classes={classes}\n//             styles={selectStyles}\n//             textFieldProps={{\n//               label: 'Label',\n//               InputLabelProps: {\n//                 shrink: true,\n//               },\n//             }}\n//             options={suggestions}\n//             components={components}\n//             value={this.state.multi}\n//             onChange={this.handleChange('multi')}\n//             placeholder=\"Select multiple countries\"\n//             isMulti\n//           />\n//         </NoSsr>\n//       </div>\n//     );\n//   }\n// }\n\n// Search.propTypes = {\n//   classes: PropTypes.object.isRequired,\n//   theme: PropTypes.object.isRequired,\n// };\n\n// export default withStyles(styles)(Search);"]},"metadata":{},"sourceType":"module"}